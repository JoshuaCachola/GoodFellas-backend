"""removed a friends and expenses join tables

Revision ID: 11d2e2439f98
Revises: c8ff51eb9ee3
Create Date: 2020-06-23 13:04:12.499158

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '11d2e2439f98'
down_revision = 'c8ff51eb9ee3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friendships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('friend1_id', sa.Integer(), nullable=False),
    sa.Column('friend2_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['friend1_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['friend2_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('expense_transactions')
    op.drop_table('users_friends')
    op.drop_table('friends')
    op.add_column('friend_requests', sa.Column('requestee_id', sa.Integer(), nullable=False))
    op.add_column('friend_requests', sa.Column('requester_id', sa.Integer(), nullable=False))
    op.drop_constraint('friend_requests_friend_id_fkey', 'friend_requests', type_='foreignkey')
    op.drop_constraint('friend_requests_user_id_fkey', 'friend_requests', type_='foreignkey')
    op.create_foreign_key(None, 'friend_requests', 'users', ['requester_id'], ['id'])
    op.create_foreign_key(None, 'friend_requests', 'users', ['requestee_id'], ['id'])
    op.drop_column('friend_requests', 'user_id')
    op.drop_column('friend_requests', 'friend_id')
    op.add_column('transactions', sa.Column('expense_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'transactions', 'expenses', ['expense_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_column('transactions', 'expense_id')
    op.add_column('friend_requests', sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('friend_requests', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'friend_requests', type_='foreignkey')
    op.drop_constraint(None, 'friend_requests', type_='foreignkey')
    op.create_foreign_key('friend_requests_user_id_fkey', 'friend_requests', 'users', ['user_id'], ['id'])
    op.create_foreign_key('friend_requests_friend_id_fkey', 'friend_requests', 'users', ['friend_id'], ['id'])
    op.drop_column('friend_requests', 'requester_id')
    op.drop_column('friend_requests', 'requestee_id')
    op.create_table('friends',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('friends_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='friends_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='friends_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users_friends',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['friends.id'], name='users_friends_friend_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='users_friends_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_friends_pkey')
    )
    op.create_table('expense_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('expense_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], name='expense_transactions_expense_id_fkey'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], name='expense_transactions_transaction_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='expense_transactions_pkey')
    )
    op.drop_table('friendships')
    # ### end Alembic commands ###
